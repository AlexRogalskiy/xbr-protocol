{
  "contractName": "XBRNetwork",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "name": "eula",
          "type": "bytes32"
        },
        {
          "name": "profile",
          "type": "bytes32"
        },
        {
          "name": "level",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMaintainer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMaintainer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "name": "sequence",
          "type": "uint32"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "maker",
          "type": "address"
        },
        {
          "name": "terms",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "network_token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "network_organization",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMaintainer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_network_token",
          "type": "address"
        },
        {
          "name": "_network_organization",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MaintainerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MaintainerRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "eula",
          "type": "bytes32"
        },
        {
          "name": "profile",
          "type": "bytes32"
        }
      ],
      "name": "register",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unregister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "member",
          "type": "address"
        },
        {
          "name": "level",
          "type": "uint8"
        }
      ],
      "name": "set_member_level",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "maker",
          "type": "address"
        },
        {
          "name": "terms",
          "type": "bytes32"
        },
        {
          "name": "provider_security",
          "type": "uint64"
        },
        {
          "name": "consumer_security",
          "type": "uint64"
        }
      ],
      "name": "open_market",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "market_id",
          "type": "bytes32"
        },
        {
          "name": "actor_type",
          "type": "uint8"
        }
      ],
      "name": "join_market",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "market_id",
          "type": "bytes32"
        }
      ],
      "name": "open_payment_channel",
      "outputs": [
        {
          "name": "payment_channel",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "market_id",
          "type": "bytes32"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "request_paying_channel",
      "outputs": [
        {
          "name": "channel_request_id",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "market_id",
          "type": "bytes32"
        }
      ],
      "name": "leave_market",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "market_id",
          "type": "bytes32"
        }
      ],
      "name": "close_market",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "962:6509:2:-;;;1615:1;1588:28;;;;;;;;;;;;;;;;;;;;2251:245;8:9:-1;5:2;;;30:1;27;20:12;5:2;2251:245:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1838:26:1;1853:10;1838:14;;;:26;;;:::i;:::-;2352:14:2;2336:13;;:30;;;;;;;;;;;;;;;;;;2399:21;2376:20;;:44;;;;;;;;;;;;;;;;;;2453:36;;;;;;;;;;;;;;;;;;;;;;;;;2468:20;2453:36;;;;;;;;;;;2431:7;:19;2439:10;2431:19;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2251:245;;962:6509;;2779:131:1;2840:24;2856:7;2840:11;:15;;;;;;:24;;;;;:::i;:::-;2895:7;2879:24;;;;;;;;;;;;2779:131;:::o;244:167:6:-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;;;:18;;;:::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;725:166::-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;962:6509:2:-;;;;;;;",
  "deployedSourceMap": "962:6509:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1900:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:286;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3856:286:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3118:218;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3118:218:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:84:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2689:84:1;;;;;;7201:56:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7201:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5429:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:103:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2528:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:41:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1998:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7413:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7413:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1712:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1712:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;4679:471;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4679:471:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1821:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;6812:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6812:119:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5649:267;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:115:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2263:115:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:168:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3388:168:2;;;;;;1900:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3856:286::-;2015:24:1;2028:10;2015:12;:24::i;:::-;2007:33;;;;;;;;4130:5:2;4106:7;:15;4114:6;4106:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;;;;;;;3856:286;;:::o;3118:218::-;3228:1;3198:7;:19;3206:10;3198:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3193:31;;;;;;;;:36;3185:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3288:41;;;;;;;;;3295:4;3288:41;;;;;;;3301:7;3288:41;;;;;;;3310:18;3288:41;;;;;;;;;;;3266:7;:19;3274:10;3266:19;;;;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3118:218;;:::o;2689:84:1:-;2737:29;2755:10;2737:17;:29::i;:::-;2689:84::o;7201:56:2:-;;:::o;5429:85::-;;;:::o;2528:103:1:-;2015:24;2028:10;2015:12;:24::i;:::-;2007:33;;;;;;;;2601:23;2616:7;2601:14;:23::i;:::-;2528:103;:::o;1998:41:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7413:56::-;;:::o;1712:28::-;;;;;;;;;;;;;:::o;4679:471::-;4835:16;4881:9;;;;;;;;;;;4892:10;4929:1;4914:12;:16;4904:27;4864:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4864:68:2;;;4854:79;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4854:79:2;;;;;;;;;;;;;;;;4835:98;;5047:61;;;;;;;;;5054:9;;;;;;;;;;;5047:61;;;;;;5065:10;5047:61;;;;;;5077:5;5047:61;;;;;;5084:5;5047:61;;;;;;;5105:1;5091:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;5091:16:2;;;;5047:61;;;5027:7;:17;5035:8;5027:17;;;;;;;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5142:1;5130:9;;;;;;;;;;;:13;5118:9;;:25;;;;;;;;;;;;;;;;;;4679:471;;;;;:::o;1821:35::-;;;;;;;;;;;;;:::o;6812:119::-;6896:26;6812:119;;;;:::o;5649:267::-;5723:23;5758:25;5808:9;5827:1;5831:2;5786:48;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5786:48:2;5758:76;;5844:7;:18;5852:9;5844:18;;;;;;;;;;;;;;;;;:27;;5877:7;5844:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5844:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5902:7;5895:14;;5649:267;;;;:::o;2263:115:1:-;2324:4;2347:24;2363:7;2347:11;:15;;:24;;;;:::i;:::-;2340:31;;2263:115;;;:::o;3388:168:2:-;3471:1;3441:7;:19;3449:10;3441:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;3436:31;;;;;;;;:36;;3428:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3530:19;3502:7;:19;3510:10;3502:19;;;;;;;;;;;;;;;:25;;;:47;;;;;;;;;;;;;;;;;;;;;;;;3388:168::o;2916:139:1:-;2980:27;2999:7;2980:11;:18;;:27;;;;:::i;:::-;3040:7;3022:26;;;;;;;;;;;;2916:139;:::o;2779:131::-;2840:24;2856:7;2840:11;:15;;:24;;;;:::i;:::-;2895:7;2879:24;;;;;;;;;;;;2779:131;:::o;725:166:6:-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;477:170::-;571:1;552:21;;:7;:21;;;;544:30;;;;;;;;588:18;592:4;598:7;588:3;:18::i;:::-;580:27;;;;;;;;637:5;614:4;:11;;:20;626:7;614:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;477:170;;:::o;244:167::-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;:18::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;962:6509:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "///////////////////////////////////////////////////////////////////////////////\n//\n//  Copyright (C) 2018 Crossbar.io Technologies GmbH and contributors.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n//\n///////////////////////////////////////////////////////////////////////////////\n\npragma solidity ^0.4.24;\n\nimport \"./XBRMaintained.sol\";\nimport \"./XBRPaymentChannel.sol\";\n\n\n/**\n * @title XBR Network root SC\n * @author The XBR Project\n */\ncontract XBRNetwork is XBRMaintained {\n\n    /// XBR Network membership levels\n    enum MemberLevel { NULL, ACTIVE, VERIFIED, RETIRED, PENALTY, BLOCKED }\n\n    /// XBR Market Actor types\n    enum ActorType { NULL, NETWORK, MAKER, PROVIDER, CONSUMER }\n\n    /// Value type for holding XBR Network membership information.\n    struct Member {\n        bytes32 eula;\n        bytes32 profile;\n        MemberLevel level;\n    }\n\n    /// Value type for holding XBR Market information.\n    struct Market {\n        uint32 sequence;\n        address owner;\n        address maker;\n        bytes32 terms;\n        address[] channels;\n    }\n\n    uint32 private marketSeq = 1;\n\n    /// Address of the XBR Network ERC20 token (XBR for the CrossbarFX technology stack)\n    address public network_token;\n\n    /// Address of the `XBR Network Organization <https://xbr.network/>`_\n    address public network_organization;\n\n    /// Current XBR Network members.\n    mapping(address => Member) public members;\n\n    /// Current XBR Markets (\"market repository\")\n    mapping(bytes32 => Market) public markets;\n\n    /**\n     * Create a new network.\n     *\n     * @param _network_token The token to run this network on.\n     * @param _network_organization The network technology provider and ecoystem sponsor.\n     */\n    constructor (address _network_token, address _network_organization) public {\n        network_token = _network_token;\n        network_organization = _network_organization;\n\n        members[msg.sender] = Member(\"\", \"\", MemberLevel.VERIFIED);\n    }\n\n    /**\n     * Join the XBR Network. All XBR stakeholders, namely XBR Data Providers,\n     * XBR Data Consumers, XBR Data Markets and XBR Data Clouds, must register\n     * with the XBR Network on the global blockchain by calling this function.\n     *\n     * @param eula The file hash (SHA2-256) of the XBR Network EULA documents\n     *             being agreed to and stored as one ZIP file archive on IPFS.\n     * @param profile Optional public member profile: the file hash (SHA2-256)\n     *                of the member profile file stored on a well-known location\n     *                (suchas as IPFS).\n     */\n    function register (bytes32 eula, bytes32 profile) public {\n        require(uint(members[msg.sender].level) == 0, \"MEMBER_ALREADY_EXISTS\");\n\n        members[msg.sender] = Member(eula, profile, MemberLevel.ACTIVE);\n    }\n\n    /**\n     * Leave the XBR Network.\n     */\n    function unregister () public {\n        require(uint(members[msg.sender].level) != 0, \"NO_SUCH_MEMBER\");\n\n        members[msg.sender].level = MemberLevel.RETIRED;\n    }\n\n    /**\n     * Manually override the member level of a XBR Network member. Being able to do so\n     * currently serves two purposes:\n     *\n     * - having a last resort to handle situation where members violated the EULA\n     * - being able to manually patch things in error/bug cases\n     */\n    function set_member_level (address member, MemberLevel level) public onlyMaintainer {\n        // only network admins are allowed to override member level\n        //require(network_admins.has(msg.sender), \"DOES_NOT_HAVE_NETWORK_ADMIN_ROLE\");\n\n        members[member].level = level;\n    }\n\n    /**\n     * Register a new XBR market. The sender of the transaction must be XBR network member\n     * and automatically becomes owner of the new market.\n     *\n     * @param maker The address of the XBR market maker that will run this market.\n     * @param terms The XBR market terms set by the market owner.\n     * @param provider_security The amount of XBR tokens a XBR provider joining the market must deposit.\n     * @param consumer_security The amount of XBR tokens a XBR consumer joining the market must deposit.\n     */\n    function open_market (address maker, bytes32 terms, uint64 provider_security, uint64 consumer_security) public {\n\n        // generate new market_id\n        bytes32 marketId = keccak256(abi.encodePacked(marketSeq, msg.sender, blockhash(block.number - 1)));\n        //require(markets[marketId].owner == address(0), \"MARKET_ALREADY_EXISTS\");\n\n        markets[marketId] = Market(marketSeq, msg.sender, maker, terms, new address[](1));\n        marketSeq = marketSeq + 1;\n    }\n\n    /**\n     * Join the given XBR market as the specified type of actor, which must be PROVIDER or CONSUMER.\n     *\n     * @param market_id The ID of the XBR data market to join.\n     * @param actor_type The type of actor under which to join: PROVIDER or CONSUMER.\n     */\n    function join_market (bytes32 market_id, ActorType actor_type) public payable {\n    }\n\n    /**\n     * Open a new payment channel and deposit an amount of XBR token into a market.\n     * The procedure returns\n     */\n    function open_payment_channel (bytes32 market_id) public payable returns (address payment_channel) {\n        XBRPaymentChannel channel = new XBRPaymentChannel(market_id, address(0), 60);\n        markets[market_id].channels.push(channel);\n        return channel;\n    }\n\n    /**\n     * As a data provider, request a new payment channel to get paid by the market maker. Given sufficient\n     * security amount (deposited by the data provider when joining the marker) to cover the request amount,\n     * the market maker will open a payment (state) channel to allow the market maker buying data keys in\n     * microtransactions, and offchain. The creation of the payment channel is asynchronously: the market maker\n     * is watching the global blockchain filtering for events relevant to the market managed by the maker.\n     * When a request to open a payment channel is recognized by the market maker, it will check the provider\n     * for sufficient security despoit covering the requested amount, and if all is fine, create a new payment\n     * channel and store the contract address for the channel request ID, so the data provider can retrieve it.\n     */\n    function request_paying_channel (bytes32 market_id, uint256 amount) public returns (bytes32 channel_request_id) {\n    }\n\n    /**\n     * As a market actor (participant) currently member of a market, leave that market.\n     * A market can only be left when all payment channels of the sender are closed (or expired).\n     *\n     * @param market_id The ID of the market to leave.\n     */\n    function leave_market (bytes32 market_id) public {\n    }\n\n    /**\n     * Close a market. A closed market will not accept new memberships.\n     *\n     * @param market_id The ID of the market to close.\n     */\n    function close_market (bytes32 market_id) public {\n    }\n}\n",
  "sourcePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRNetwork.sol",
  "ast": {
    "absolutePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRNetwork.sol",
    "exportedSymbols": {
      "XBRNetwork": [
        428
      ]
    },
    "id": 429,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 161,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "805:24:2"
      },
      {
        "absolutePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRMaintained.sol",
        "file": "./XBRMaintained.sol",
        "id": 162,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 160,
        "src": "831:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRPaymentChannel.sol",
        "file": "./XBRPaymentChannel.sol",
        "id": 163,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 661,
        "src": "861:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 164,
              "name": "XBRMaintained",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 159,
              "src": "985:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_XBRMaintained_$159",
                "typeString": "contract XBRMaintained"
              }
            },
            "id": 165,
            "nodeType": "InheritanceSpecifier",
            "src": "985:13:2"
          }
        ],
        "contractDependencies": [
          159,
          660
        ],
        "contractKind": "contract",
        "documentation": "@title XBR Network root SC\n@author The XBR Project",
        "fullyImplemented": true,
        "id": 428,
        "linearizedBaseContracts": [
          428,
          159
        ],
        "name": "XBRNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "XBRNetwork.MemberLevel",
            "id": 172,
            "members": [
              {
                "id": 166,
                "name": "NULL",
                "nodeType": "EnumValue",
                "src": "1063:4:2"
              },
              {
                "id": 167,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "1069:6:2"
              },
              {
                "id": 168,
                "name": "VERIFIED",
                "nodeType": "EnumValue",
                "src": "1077:8:2"
              },
              {
                "id": 169,
                "name": "RETIRED",
                "nodeType": "EnumValue",
                "src": "1087:7:2"
              },
              {
                "id": 170,
                "name": "PENALTY",
                "nodeType": "EnumValue",
                "src": "1096:7:2"
              },
              {
                "id": 171,
                "name": "BLOCKED",
                "nodeType": "EnumValue",
                "src": "1105:7:2"
              }
            ],
            "name": "MemberLevel",
            "nodeType": "EnumDefinition",
            "src": "1044:70:2"
          },
          {
            "canonicalName": "XBRNetwork.ActorType",
            "id": 178,
            "members": [
              {
                "id": 173,
                "name": "NULL",
                "nodeType": "EnumValue",
                "src": "1168:4:2"
              },
              {
                "id": 174,
                "name": "NETWORK",
                "nodeType": "EnumValue",
                "src": "1174:7:2"
              },
              {
                "id": 175,
                "name": "MAKER",
                "nodeType": "EnumValue",
                "src": "1183:5:2"
              },
              {
                "id": 176,
                "name": "PROVIDER",
                "nodeType": "EnumValue",
                "src": "1190:8:2"
              },
              {
                "id": 177,
                "name": "CONSUMER",
                "nodeType": "EnumValue",
                "src": "1200:8:2"
              }
            ],
            "name": "ActorType",
            "nodeType": "EnumDefinition",
            "src": "1151:59:2"
          },
          {
            "canonicalName": "XBRNetwork.Member",
            "id": 185,
            "members": [
              {
                "constant": false,
                "id": 180,
                "name": "eula",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1307:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 179,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 182,
                "name": "profile",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1329:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 181,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1329:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1354:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_MemberLevel_$172",
                  "typeString": "enum XBRNetwork.MemberLevel"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 183,
                  "name": "MemberLevel",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "1354:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MemberLevel_$172",
                    "typeString": "enum XBRNetwork.MemberLevel"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Member",
            "nodeType": "StructDefinition",
            "scope": 428,
            "src": "1283:95:2",
            "visibility": "public"
          },
          {
            "canonicalName": "XBRNetwork.Market",
            "id": 197,
            "members": [
              {
                "constant": false,
                "id": 187,
                "name": "sequence",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1463:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 186,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1463:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 189,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1488:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 188,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 191,
                "name": "maker",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1511:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 190,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1511:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 193,
                "name": "terms",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1534:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 192,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1534:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 196,
                "name": "channels",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1557:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 195,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1557:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Market",
            "nodeType": "StructDefinition",
            "scope": 428,
            "src": "1439:143:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 200,
            "name": "marketSeq",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1588:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 198,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1588:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 199,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1615:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 202,
            "name": "network_token",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1712:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 201,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1712:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 204,
            "name": "network_organization",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1821:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 203,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1821:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 208,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1900:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
              "typeString": "mapping(address => struct XBRNetwork.Member)"
            },
            "typeName": {
              "id": 207,
              "keyType": {
                "id": 205,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1908:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1900:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                "typeString": "mapping(address => struct XBRNetwork.Member)"
              },
              "valueType": {
                "contractScope": null,
                "id": 206,
                "name": "Member",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 185,
                "src": "1919:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Member_$185_storage_ptr",
                  "typeString": "struct XBRNetwork.Member"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 212,
            "name": "markets",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1998:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
              "typeString": "mapping(bytes32 => struct XBRNetwork.Market)"
            },
            "typeName": {
              "id": 211,
              "keyType": {
                "id": 209,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2006:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1998:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
                "typeString": "mapping(bytes32 => struct XBRNetwork.Market)"
              },
              "valueType": {
                "contractScope": null,
                "id": 210,
                "name": "Market",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 197,
                "src": "2017:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Market_$197_storage_ptr",
                  "typeString": "struct XBRNetwork.Market"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2326:170:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 219,
                      "name": "network_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2336:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "_network_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2352:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2336:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "network_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "2376:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "_network_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "2399:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2376:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2431:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                          "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "2439:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2439:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2431:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_storage",
                        "typeString": "struct XBRNetwork.Member storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2460:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2464:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "MemberLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "2468:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MemberLevel_$172_$",
                              "typeString": "type(enum XBRNetwork.MemberLevel)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "VERIFIED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2468:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        ],
                        "id": 231,
                        "name": "Member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2453:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Member_$185_storage_ptr_$",
                          "typeString": "type(struct XBRNetwork.Member storage pointer)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2453:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_memory",
                        "typeString": "struct XBRNetwork.Member memory"
                      }
                    },
                    "src": "2431:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Member_$185_storage",
                      "typeString": "struct XBRNetwork.Member storage ref"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:58:2"
                }
              ]
            },
            "documentation": "Create a new network.\n     * @param _network_token The token to run this network on.\n@param _network_organization The network technology provider and ecoystem sponsor.",
            "id": 240,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_network_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "2264:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "_network_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "2288:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2263:55:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:0:2"
            },
            "scope": 428,
            "src": "2251:245:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "3175:161:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 249,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "3198:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                                    "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                                  }
                                },
                                "id": 252,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 250,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1501,
                                    "src": "3206:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3206:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3198:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Member_$185_storage",
                                  "typeString": "struct XBRNetwork.Member storage ref"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "3198:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            ],
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3193:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3193:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3228:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3193:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d454d4245525f414c52454144595f455849535453",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3231:23:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3eb085791c9b5d2df03d60ffcb608900699726322b2c608321240a4daa5bd31",
                          "typeString": "literal_string \"MEMBER_ALREADY_EXISTS\""
                        },
                        "value": "MEMBER_ALREADY_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3eb085791c9b5d2df03d60ffcb608900699726322b2c608321240a4daa5bd31",
                          "typeString": "literal_string \"MEMBER_ALREADY_EXISTS\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1504,
                        1505
                      ],
                      "referencedDeclaration": 1505,
                      "src": "3185:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3266:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                          "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                        }
                      },
                      "id": 263,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "3274:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3274:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3266:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_storage",
                        "typeString": "struct XBRNetwork.Member storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "eula",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "3295:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "profile",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "3301:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "MemberLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3310:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MemberLevel_$172_$",
                              "typeString": "type(enum XBRNetwork.MemberLevel)"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3310:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        ],
                        "id": 264,
                        "name": "Member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "3288:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Member_$185_storage_ptr_$",
                          "typeString": "type(struct XBRNetwork.Member storage pointer)"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3288:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_memory",
                        "typeString": "struct XBRNetwork.Member memory"
                      }
                    },
                    "src": "3266:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Member_$185_storage",
                      "typeString": "struct XBRNetwork.Member storage ref"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3266:63:2"
                }
              ]
            },
            "documentation": "Join the XBR Network. All XBR stakeholders, namely XBR Data Providers,\nXBR Data Consumers, XBR Data Markets and XBR Data Clouds, must register\nwith the XBR Network on the global blockchain by calling this function.\n     * @param eula The file hash (SHA2-256) of the XBR Network EULA documents\n            being agreed to and stored as one ZIP file archive on IPFS.\n@param profile Optional public member profile: the file hash (SHA2-256)\n               of the member profile file stored on a well-known location\n               (suchas as IPFS).",
            "id": 273,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "eula",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "3137:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "profile",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "3151:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3136:31:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3175:0:2"
            },
            "scope": 428,
            "src": "3118:218:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "3418:138:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 278,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "3441:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                                    "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                                  }
                                },
                                "id": 281,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 279,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1501,
                                    "src": "3449:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3449:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3441:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Member_$185_storage",
                                  "typeString": "struct XBRNetwork.Member storage ref"
                                }
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "3441:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            ],
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3436:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3436:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3471:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3436:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e4f5f535543485f4d454d424552",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3474:16:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4033f0d2aee40aa8c26dd7a43827b900bd2b7b740bfb635777273e01722db306",
                          "typeString": "literal_string \"NO_SUCH_MEMBER\""
                        },
                        "value": "NO_SUCH_MEMBER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4033f0d2aee40aa8c26dd7a43827b900bd2b7b740bfb635777273e01722db306",
                          "typeString": "literal_string \"NO_SUCH_MEMBER\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1504,
                        1505
                      ],
                      "referencedDeclaration": 1505,
                      "src": "3428:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3428:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:63:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 289,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "3502:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                            "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                          }
                        },
                        "id": 292,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 290,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "3510:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3510:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3502:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Member_$185_storage",
                          "typeString": "struct XBRNetwork.Member storage ref"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "3502:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "MemberLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "3530:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MemberLevel_$172_$",
                          "typeString": "type(enum XBRNetwork.MemberLevel)"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RETIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3530:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "src": "3502:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MemberLevel_$172",
                      "typeString": "enum XBRNetwork.MemberLevel"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "3502:47:2"
                }
              ]
            },
            "documentation": "Leave the XBR Network.",
            "id": 299,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "unregister",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3408:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:0:2"
            },
            "scope": 428,
            "src": "3388:168:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "3940:202:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4106:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                            "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                          }
                        },
                        "id": 310,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 309,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "4114:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4106:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Member_$185_storage",
                          "typeString": "struct XBRNetwork.Member storage ref"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "4106:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "level",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "4130:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "src": "4106:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MemberLevel_$172",
                      "typeString": "enum XBRNetwork.MemberLevel"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4106:29:2"
                }
              ]
            },
            "documentation": "Manually override the member level of a XBR Network member. Being able to do so\ncurrently serves two purposes:\n     * - having a last resort to handle situation where members violated the EULA\n- being able to manually patch things in error/bug cases",
            "id": 316,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 305,
                  "name": "onlyMaintainer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 92,
                  "src": "3925:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3925:14:2"
              }
            ],
            "name": "set_member_level",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "member",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "3883:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "3899:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MemberLevel_$172",
                    "typeString": "enum XBRNetwork.MemberLevel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 302,
                    "name": "MemberLevel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "3899:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MemberLevel_$172",
                      "typeString": "enum XBRNetwork.MemberLevel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3882:35:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3940:0:2"
            },
            "scope": 428,
            "src": "3856:286:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "4790:360:2",
              "statements": [
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "name": "marketId",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "4835:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4835:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "marketSeq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4881:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 333,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1501,
                              "src": "4892:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4892:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 336,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1491,
                                    "src": "4914:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4914:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4929:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4914:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 335,
                              "name": "blockhash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1492,
                              "src": "4904:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256) view returns (bytes32)"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4904:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1488,
                            "src": "4864:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4864:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4864:68:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 329,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1495,
                      "src": "4854:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4835:98:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "5027:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
                          "typeString": "mapping(bytes32 => struct XBRNetwork.Market storage ref)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5035:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5027:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$197_storage",
                        "typeString": "struct XBRNetwork.Market storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "marketSeq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "5054:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "5065:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5065:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 351,
                          "name": "maker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 318,
                          "src": "5077:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "terms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "5084:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5105:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5091:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 353,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5095:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 354,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5095:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5091:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 347,
                        "name": "Market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "5047:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Market_$197_storage_ptr_$",
                          "typeString": "type(struct XBRNetwork.Market storage pointer)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5047:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$197_memory",
                        "typeString": "struct XBRNetwork.Market memory"
                      }
                    },
                    "src": "5027:81:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$197_storage",
                      "typeString": "struct XBRNetwork.Market storage ref"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5027:81:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 361,
                      "name": "marketSeq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "5118:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "marketSeq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "5130:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5142:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5130:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5118:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:25:2"
                }
              ]
            },
            "documentation": "Register a new XBR market. The sender of the transaction must be XBR network member\nand automatically becomes owner of the new market.\n     * @param maker The address of the XBR market maker that will run this market.\n@param terms The XBR market terms set by the market owner.\n@param provider_security The amount of XBR tokens a XBR provider joining the market must deposit.\n@param consumer_security The amount of XBR tokens a XBR consumer joining the market must deposit.",
            "id": 368,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "open_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "name": "maker",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4701:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "name": "terms",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4716:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4716:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "name": "provider_security",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4731:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "name": "consumer_security",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4757:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4700:82:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4790:0:2"
            },
            "scope": 428,
            "src": "4679:471:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "5507:7:2",
              "statements": []
            },
            "documentation": "Join the given XBR market as the specified type of actor, which must be PROVIDER or CONSUMER.\n     * @param market_id The ID of the XBR data market to join.\n@param actor_type The type of actor under which to join: PROVIDER or CONSUMER.",
            "id": 376,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "join_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5451:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5451:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "name": "actor_type",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5470:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ActorType_$178",
                    "typeString": "enum XBRNetwork.ActorType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 371,
                    "name": "ActorType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 178,
                    "src": "5470:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ActorType_$178",
                      "typeString": "enum XBRNetwork.ActorType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5450:41:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5507:0:2"
            },
            "scope": 428,
            "src": "5429:85:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "5748:168:2",
              "statements": [
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "name": "channel",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "5758:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                        "typeString": "contract XBRPaymentChannel"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 383,
                        "name": "XBRPaymentChannel",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "5758:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 393,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "market_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5808:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5827:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5819:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5819:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3630",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5831:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5786:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_contract$_XBRPaymentChannel_$660_$",
                        "typeString": "function (bytes32,address,uint256) payable returns (contract XBRPaymentChannel)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 385,
                        "name": "XBRPaymentChannel",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "5790:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5786:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                      "typeString": "contract XBRPaymentChannel"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5758:76:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "channel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "5877:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 394,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "5844:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
                              "typeString": "mapping(bytes32 => struct XBRNetwork.Market storage ref)"
                            }
                          },
                          "id": 396,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 395,
                            "name": "market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5852:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5844:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$197_storage",
                            "typeString": "struct XBRNetwork.Market storage ref"
                          }
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "channels",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 196,
                        "src": "5844:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5844:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 402,
                    "name": "channel",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 384,
                    "src": "5902:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                      "typeString": "contract XBRPaymentChannel"
                    }
                  },
                  "functionReturnParameters": 382,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "5895:14:2"
                }
              ]
            },
            "documentation": "Open a new payment channel and deposit an amount of XBR token into a market.\nThe procedure returns",
            "id": 405,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "open_payment_channel",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5680:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5680:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5679:19:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "payment_channel",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5723:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5722:25:2"
            },
            "scope": 428,
            "src": "5649:267:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "6924:7:2",
              "statements": []
            },
            "documentation": "As a data provider, request a new payment channel to get paid by the market maker. Given sufficient\nsecurity amount (deposited by the data provider when joining the marker) to cover the request amount,\nthe market maker will open a payment (state) channel to allow the market maker buying data keys in\nmicrotransactions, and offchain. The creation of the payment channel is asynchronously: the market maker\nis watching the global blockchain filtering for events relevant to the market managed by the maker.\nWhen a request to open a payment channel is recognized by the market maker, it will check the provider\nfor sufficient security despoit covering the requested amount, and if all is fine, create a new payment\nchannel and store the contract address for the channel request ID, so the data provider can retrieve it.",
            "id": 415,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "request_paying_channel",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6845:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6845:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6864:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6864:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6844:35:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "name": "channel_request_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6896:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6896:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6895:28:2"
            },
            "scope": 428,
            "src": "6812:119:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "7250:7:2",
              "statements": []
            },
            "documentation": "As a market actor (participant) currently member of a market, leave that market.\nA market can only be left when all payment channels of the sender are closed (or expired).\n     * @param market_id The ID of the market to leave.",
            "id": 421,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "leave_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "7224:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7223:19:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7250:0:2"
            },
            "scope": 428,
            "src": "7201:56:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "7462:7:2",
              "statements": []
            },
            "documentation": "Close a market. A closed market will not accept new memberships.\n     * @param market_id The ID of the market to close.",
            "id": 427,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "close_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "7436:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7435:19:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7462:0:2"
            },
            "scope": 428,
            "src": "7413:56:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 429,
        "src": "962:6509:2"
      }
    ],
    "src": "805:6667:2"
  },
  "legacyAST": {
    "absolutePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRNetwork.sol",
    "exportedSymbols": {
      "XBRNetwork": [
        428
      ]
    },
    "id": 429,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 161,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "805:24:2"
      },
      {
        "absolutePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRMaintained.sol",
        "file": "./XBRMaintained.sol",
        "id": 162,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 160,
        "src": "831:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oberstet/scm/xbr/xbr-protocol/contracts/XBRPaymentChannel.sol",
        "file": "./XBRPaymentChannel.sol",
        "id": 163,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 661,
        "src": "861:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 164,
              "name": "XBRMaintained",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 159,
              "src": "985:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_XBRMaintained_$159",
                "typeString": "contract XBRMaintained"
              }
            },
            "id": 165,
            "nodeType": "InheritanceSpecifier",
            "src": "985:13:2"
          }
        ],
        "contractDependencies": [
          159,
          660
        ],
        "contractKind": "contract",
        "documentation": "@title XBR Network root SC\n@author The XBR Project",
        "fullyImplemented": true,
        "id": 428,
        "linearizedBaseContracts": [
          428,
          159
        ],
        "name": "XBRNetwork",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "XBRNetwork.MemberLevel",
            "id": 172,
            "members": [
              {
                "id": 166,
                "name": "NULL",
                "nodeType": "EnumValue",
                "src": "1063:4:2"
              },
              {
                "id": 167,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "1069:6:2"
              },
              {
                "id": 168,
                "name": "VERIFIED",
                "nodeType": "EnumValue",
                "src": "1077:8:2"
              },
              {
                "id": 169,
                "name": "RETIRED",
                "nodeType": "EnumValue",
                "src": "1087:7:2"
              },
              {
                "id": 170,
                "name": "PENALTY",
                "nodeType": "EnumValue",
                "src": "1096:7:2"
              },
              {
                "id": 171,
                "name": "BLOCKED",
                "nodeType": "EnumValue",
                "src": "1105:7:2"
              }
            ],
            "name": "MemberLevel",
            "nodeType": "EnumDefinition",
            "src": "1044:70:2"
          },
          {
            "canonicalName": "XBRNetwork.ActorType",
            "id": 178,
            "members": [
              {
                "id": 173,
                "name": "NULL",
                "nodeType": "EnumValue",
                "src": "1168:4:2"
              },
              {
                "id": 174,
                "name": "NETWORK",
                "nodeType": "EnumValue",
                "src": "1174:7:2"
              },
              {
                "id": 175,
                "name": "MAKER",
                "nodeType": "EnumValue",
                "src": "1183:5:2"
              },
              {
                "id": 176,
                "name": "PROVIDER",
                "nodeType": "EnumValue",
                "src": "1190:8:2"
              },
              {
                "id": 177,
                "name": "CONSUMER",
                "nodeType": "EnumValue",
                "src": "1200:8:2"
              }
            ],
            "name": "ActorType",
            "nodeType": "EnumDefinition",
            "src": "1151:59:2"
          },
          {
            "canonicalName": "XBRNetwork.Member",
            "id": 185,
            "members": [
              {
                "constant": false,
                "id": 180,
                "name": "eula",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1307:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 179,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1307:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 182,
                "name": "profile",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1329:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 181,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1329:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 184,
                "name": "level",
                "nodeType": "VariableDeclaration",
                "scope": 185,
                "src": "1354:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_MemberLevel_$172",
                  "typeString": "enum XBRNetwork.MemberLevel"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 183,
                  "name": "MemberLevel",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 172,
                  "src": "1354:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MemberLevel_$172",
                    "typeString": "enum XBRNetwork.MemberLevel"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Member",
            "nodeType": "StructDefinition",
            "scope": 428,
            "src": "1283:95:2",
            "visibility": "public"
          },
          {
            "canonicalName": "XBRNetwork.Market",
            "id": 197,
            "members": [
              {
                "constant": false,
                "id": 187,
                "name": "sequence",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1463:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 186,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1463:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 189,
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1488:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 188,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1488:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 191,
                "name": "maker",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1511:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 190,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1511:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 193,
                "name": "terms",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1534:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 192,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1534:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 196,
                "name": "channels",
                "nodeType": "VariableDeclaration",
                "scope": 197,
                "src": "1557:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 195,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "1557:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Market",
            "nodeType": "StructDefinition",
            "scope": 428,
            "src": "1439:143:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 200,
            "name": "marketSeq",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1588:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 198,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1588:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 199,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1615:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 202,
            "name": "network_token",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1712:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 201,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1712:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 204,
            "name": "network_organization",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1821:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 203,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1821:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 208,
            "name": "members",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1900:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
              "typeString": "mapping(address => struct XBRNetwork.Member)"
            },
            "typeName": {
              "id": 207,
              "keyType": {
                "id": 205,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1908:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1900:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                "typeString": "mapping(address => struct XBRNetwork.Member)"
              },
              "valueType": {
                "contractScope": null,
                "id": 206,
                "name": "Member",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 185,
                "src": "1919:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Member_$185_storage_ptr",
                  "typeString": "struct XBRNetwork.Member"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 212,
            "name": "markets",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1998:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
              "typeString": "mapping(bytes32 => struct XBRNetwork.Market)"
            },
            "typeName": {
              "id": 211,
              "keyType": {
                "id": 209,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2006:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1998:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
                "typeString": "mapping(bytes32 => struct XBRNetwork.Market)"
              },
              "valueType": {
                "contractScope": null,
                "id": 210,
                "name": "Market",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 197,
                "src": "2017:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Market_$197_storage_ptr",
                  "typeString": "struct XBRNetwork.Market"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2326:170:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 219,
                      "name": "network_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2336:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "_network_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2352:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2336:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 223,
                      "name": "network_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "2376:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 224,
                      "name": "_network_organization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "2399:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2376:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "2431:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                          "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                        }
                      },
                      "id": 230,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "2439:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2439:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2431:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_storage",
                        "typeString": "struct XBRNetwork.Member storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2460:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2464:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "MemberLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "2468:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MemberLevel_$172_$",
                              "typeString": "type(enum XBRNetwork.MemberLevel)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "VERIFIED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2468:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        ],
                        "id": 231,
                        "name": "Member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "2453:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Member_$185_storage_ptr_$",
                          "typeString": "type(struct XBRNetwork.Member storage pointer)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2453:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_memory",
                        "typeString": "struct XBRNetwork.Member memory"
                      }
                    },
                    "src": "2431:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Member_$185_storage",
                      "typeString": "struct XBRNetwork.Member storage ref"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:58:2"
                }
              ]
            },
            "documentation": "Create a new network.\n     * @param _network_token The token to run this network on.\n@param _network_organization The network technology provider and ecoystem sponsor.",
            "id": 240,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "_network_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "2264:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "_network_organization",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "2288:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2263:55:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:0:2"
            },
            "scope": 428,
            "src": "2251:245:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "3175:161:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 249,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "3198:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                                    "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                                  }
                                },
                                "id": 252,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 250,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1501,
                                    "src": "3206:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3206:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3198:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Member_$185_storage",
                                  "typeString": "struct XBRNetwork.Member storage ref"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "3198:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            ],
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3193:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3193:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3228:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3193:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d454d4245525f414c52454144595f455849535453",
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3231:23:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3eb085791c9b5d2df03d60ffcb608900699726322b2c608321240a4daa5bd31",
                          "typeString": "literal_string \"MEMBER_ALREADY_EXISTS\""
                        },
                        "value": "MEMBER_ALREADY_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3eb085791c9b5d2df03d60ffcb608900699726322b2c608321240a4daa5bd31",
                          "typeString": "literal_string \"MEMBER_ALREADY_EXISTS\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1504,
                        1505
                      ],
                      "referencedDeclaration": 1505,
                      "src": "3185:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:70:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3266:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                          "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                        }
                      },
                      "id": 263,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "3274:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3274:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3266:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_storage",
                        "typeString": "struct XBRNetwork.Member storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "eula",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 242,
                          "src": "3295:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 266,
                          "name": "profile",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "3301:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "MemberLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3310:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MemberLevel_$172_$",
                              "typeString": "type(enum XBRNetwork.MemberLevel)"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3310:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_MemberLevel_$172",
                            "typeString": "enum XBRNetwork.MemberLevel"
                          }
                        ],
                        "id": 264,
                        "name": "Member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "3288:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Member_$185_storage_ptr_$",
                          "typeString": "type(struct XBRNetwork.Member storage pointer)"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3288:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Member_$185_memory",
                        "typeString": "struct XBRNetwork.Member memory"
                      }
                    },
                    "src": "3266:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Member_$185_storage",
                      "typeString": "struct XBRNetwork.Member storage ref"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3266:63:2"
                }
              ]
            },
            "documentation": "Join the XBR Network. All XBR stakeholders, namely XBR Data Providers,\nXBR Data Consumers, XBR Data Markets and XBR Data Clouds, must register\nwith the XBR Network on the global blockchain by calling this function.\n     * @param eula The file hash (SHA2-256) of the XBR Network EULA documents\n            being agreed to and stored as one ZIP file archive on IPFS.\n@param profile Optional public member profile: the file hash (SHA2-256)\n               of the member profile file stored on a well-known location\n               (suchas as IPFS).",
            "id": 273,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "register",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "eula",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "3137:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "profile",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "3151:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3151:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3136:31:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3175:0:2"
            },
            "scope": 428,
            "src": "3118:218:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "3418:138:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 278,
                                  "name": "members",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "3441:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                                    "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                                  }
                                },
                                "id": 281,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 279,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1501,
                                    "src": "3449:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3449:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3441:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Member_$185_storage",
                                  "typeString": "struct XBRNetwork.Member storage ref"
                                }
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 184,
                              "src": "3441:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_MemberLevel_$172",
                                "typeString": "enum XBRNetwork.MemberLevel"
                              }
                            ],
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3436:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3436:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3471:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3436:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e4f5f535543485f4d454d424552",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3474:16:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4033f0d2aee40aa8c26dd7a43827b900bd2b7b740bfb635777273e01722db306",
                          "typeString": "literal_string \"NO_SUCH_MEMBER\""
                        },
                        "value": "NO_SUCH_MEMBER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4033f0d2aee40aa8c26dd7a43827b900bd2b7b740bfb635777273e01722db306",
                          "typeString": "literal_string \"NO_SUCH_MEMBER\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1504,
                        1505
                      ],
                      "referencedDeclaration": 1505,
                      "src": "3428:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3428:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "3428:63:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 289,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "3502:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                            "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                          }
                        },
                        "id": 292,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 290,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "3510:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3510:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3502:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Member_$185_storage",
                          "typeString": "struct XBRNetwork.Member storage ref"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "3502:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "MemberLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "3530:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_MemberLevel_$172_$",
                          "typeString": "type(enum XBRNetwork.MemberLevel)"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "RETIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3530:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "src": "3502:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MemberLevel_$172",
                      "typeString": "enum XBRNetwork.MemberLevel"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "3502:47:2"
                }
              ]
            },
            "documentation": "Leave the XBR Network.",
            "id": 299,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "unregister",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3408:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:0:2"
            },
            "scope": 428,
            "src": "3388:168:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "3940:202:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4106:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Member_$185_storage_$",
                            "typeString": "mapping(address => struct XBRNetwork.Member storage ref)"
                          }
                        },
                        "id": 310,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 309,
                          "name": "member",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "4114:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4106:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Member_$185_storage",
                          "typeString": "struct XBRNetwork.Member storage ref"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "4106:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "level",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "4130:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MemberLevel_$172",
                        "typeString": "enum XBRNetwork.MemberLevel"
                      }
                    },
                    "src": "4106:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MemberLevel_$172",
                      "typeString": "enum XBRNetwork.MemberLevel"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4106:29:2"
                }
              ]
            },
            "documentation": "Manually override the member level of a XBR Network member. Being able to do so\ncurrently serves two purposes:\n     * - having a last resort to handle situation where members violated the EULA\n- being able to manually patch things in error/bug cases",
            "id": 316,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 305,
                  "name": "onlyMaintainer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 92,
                  "src": "3925:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3925:14:2"
              }
            ],
            "name": "set_member_level",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "name": "member",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "3883:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3883:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "3899:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MemberLevel_$172",
                    "typeString": "enum XBRNetwork.MemberLevel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 302,
                    "name": "MemberLevel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 172,
                    "src": "3899:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MemberLevel_$172",
                      "typeString": "enum XBRNetwork.MemberLevel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3882:35:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3940:0:2"
            },
            "scope": 428,
            "src": "3856:286:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "4790:360:2",
              "statements": [
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "name": "marketId",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "4835:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4835:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "marketSeq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4881:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 333,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1501,
                              "src": "4892:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4892:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 336,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1491,
                                    "src": "4914:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4914:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4929:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4914:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 335,
                              "name": "blockhash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1492,
                              "src": "4904:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256) view returns (bytes32)"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4904:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1488,
                            "src": "4864:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4864:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4864:68:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 329,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1495,
                      "src": "4854:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                        "typeString": "function () pure returns (bytes32)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4835:98:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "markets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "5027:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
                          "typeString": "mapping(bytes32 => struct XBRNetwork.Market storage ref)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "marketId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5035:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5027:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$197_storage",
                        "typeString": "struct XBRNetwork.Market storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 348,
                          "name": "marketSeq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "5054:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "5065:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5065:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 351,
                          "name": "maker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 318,
                          "src": "5077:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "terms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "5084:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5105:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5091:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 353,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5095:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 354,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "5095:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5091:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        ],
                        "id": 347,
                        "name": "Market",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "5047:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Market_$197_storage_ptr_$",
                          "typeString": "type(struct XBRNetwork.Market storage pointer)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5047:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Market_$197_memory",
                        "typeString": "struct XBRNetwork.Market memory"
                      }
                    },
                    "src": "5027:81:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Market_$197_storage",
                      "typeString": "struct XBRNetwork.Market storage ref"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5027:81:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 361,
                      "name": "marketSeq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "5118:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "marketSeq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "5130:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5142:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5130:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5118:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:25:2"
                }
              ]
            },
            "documentation": "Register a new XBR market. The sender of the transaction must be XBR network member\nand automatically becomes owner of the new market.\n     * @param maker The address of the XBR market maker that will run this market.\n@param terms The XBR market terms set by the market owner.\n@param provider_security The amount of XBR tokens a XBR provider joining the market must deposit.\n@param consumer_security The amount of XBR tokens a XBR consumer joining the market must deposit.",
            "id": 368,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "open_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "name": "maker",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4701:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 320,
                  "name": "terms",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4716:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4716:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "name": "provider_security",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4731:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "name": "consumer_security",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "4757:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4700:82:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4790:0:2"
            },
            "scope": 428,
            "src": "4679:471:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "5507:7:2",
              "statements": []
            },
            "documentation": "Join the given XBR market as the specified type of actor, which must be PROVIDER or CONSUMER.\n     * @param market_id The ID of the XBR data market to join.\n@param actor_type The type of actor under which to join: PROVIDER or CONSUMER.",
            "id": 376,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "join_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5451:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5451:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "name": "actor_type",
                  "nodeType": "VariableDeclaration",
                  "scope": 376,
                  "src": "5470:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ActorType_$178",
                    "typeString": "enum XBRNetwork.ActorType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 371,
                    "name": "ActorType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 178,
                    "src": "5470:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ActorType_$178",
                      "typeString": "enum XBRNetwork.ActorType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5450:41:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5507:0:2"
            },
            "scope": 428,
            "src": "5429:85:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "5748:168:2",
              "statements": [
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "name": "channel",
                      "nodeType": "VariableDeclaration",
                      "scope": 405,
                      "src": "5758:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                        "typeString": "contract XBRPaymentChannel"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 383,
                        "name": "XBRPaymentChannel",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "5758:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 393,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 387,
                        "name": "market_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "5808:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5827:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5819:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5819:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3630",
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5831:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        }
                      ],
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5786:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_bytes32_$_t_address_$_t_uint256_$returns$_t_contract$_XBRPaymentChannel_$660_$",
                        "typeString": "function (bytes32,address,uint256) payable returns (contract XBRPaymentChannel)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 385,
                        "name": "XBRPaymentChannel",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 660,
                        "src": "5790:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5786:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                      "typeString": "contract XBRPaymentChannel"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5758:76:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "channel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "5877:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                          "typeString": "contract XBRPaymentChannel"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 394,
                            "name": "markets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "5844:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Market_$197_storage_$",
                              "typeString": "mapping(bytes32 => struct XBRNetwork.Market storage ref)"
                            }
                          },
                          "id": 396,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 395,
                            "name": "market_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5852:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5844:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Market_$197_storage",
                            "typeString": "struct XBRNetwork.Market storage ref"
                          }
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "channels",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 196,
                        "src": "5844:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5844:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:41:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 402,
                    "name": "channel",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 384,
                    "src": "5902:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XBRPaymentChannel_$660",
                      "typeString": "contract XBRPaymentChannel"
                    }
                  },
                  "functionReturnParameters": 382,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "5895:14:2"
                }
              ]
            },
            "documentation": "Open a new payment channel and deposit an amount of XBR token into a market.\nThe procedure returns",
            "id": 405,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "open_payment_channel",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5680:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5680:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5679:19:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "payment_channel",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "5723:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5722:25:2"
            },
            "scope": 428,
            "src": "5649:267:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "6924:7:2",
              "statements": []
            },
            "documentation": "As a data provider, request a new payment channel to get paid by the market maker. Given sufficient\nsecurity amount (deposited by the data provider when joining the marker) to cover the request amount,\nthe market maker will open a payment (state) channel to allow the market maker buying data keys in\nmicrotransactions, and offchain. The creation of the payment channel is asynchronously: the market maker\nis watching the global blockchain filtering for events relevant to the market managed by the maker.\nWhen a request to open a payment channel is recognized by the market maker, it will check the provider\nfor sufficient security despoit covering the requested amount, and if all is fine, create a new payment\nchannel and store the contract address for the channel request ID, so the data provider can retrieve it.",
            "id": 415,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "request_paying_channel",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6845:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6845:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6864:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6864:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6844:35:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "name": "channel_request_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6896:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6896:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6895:28:2"
            },
            "scope": 428,
            "src": "6812:119:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "7250:7:2",
              "statements": []
            },
            "documentation": "As a market actor (participant) currently member of a market, leave that market.\nA market can only be left when all payment channels of the sender are closed (or expired).\n     * @param market_id The ID of the market to leave.",
            "id": 421,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "leave_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "7224:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7223:19:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7250:0:2"
            },
            "scope": 428,
            "src": "7201:56:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "7462:7:2",
              "statements": []
            },
            "documentation": "Close a market. A closed market will not accept new memberships.\n     * @param market_id The ID of the market to close.",
            "id": 427,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "close_market",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "market_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "7436:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7435:19:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7462:0:2"
            },
            "scope": 428,
            "src": "7413:56:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 429,
        "src": "962:6509:2"
      }
    ],
    "src": "805:6667:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa57b8a5584442b467b4689f1144d269d096a3daf",
      "transactionHash": "0xc851ee9fc0bff6e8901cc164ae1b49f754a5ea40e078496a1880ef2ff23ed367"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-12T06:44:14.263Z"
}